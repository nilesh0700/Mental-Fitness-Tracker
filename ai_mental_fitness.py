# -*- coding: utf-8 -*-
"""AI_MENTAL_FITNESS

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1aR3zROE59mgp0KJxR_4FBjo7WubIhD9C
"""

import warnings
warnings.filterwarnings('ignore')

import numpy as np
import pandas as pd

from google.colab import drive
drive.mount('/content/drive')

import seaborn as sns
import matplotlib.pyplot as plt
import plotly.express as px

df1 = pd.read_csv("/content/mental-and-substance-use-as-share-of-disease -AI (1).csv")
df2 = pd.read_csv("/content/prevalence-by-mental-and-substance-use-disorder _AI (2).csv")

df1.head(4)

data = pd.merge(df1,df2)
data.head(4)

data.isnull().sum()

data.drop('Code', axis = 1, inplace = True)

data.head(5)

data.size,data.shape

plt.figure(figsize=(12,6))
sns.heatmap(data.corr(),annot=True,cmap='Blues')
plt.plot()

sns.pairplot(data,corner=True)
plt.show()

print(data)
mean = data['DALYs (Disability-Adjusted Life Years) - Mental disorders - Sex: Both - Age: All Ages (Percent)'].mean()

fig = px.pie(data,values='DALYs (Disability-Adjusted Life Years) - Mental disorders - Sex: Both - Age: All Ages (Percent)',names='Year')
fig.show()

fig = px.bar(data.head(10),x='DALYs (Disability-Adjusted Life Years) - Mental disorders - Sex: Both - Age: All Ages (Percent)',color='Year',template='ggplot2')
fig.show()

df = data.copy()
df.head()

df.info()

from sklearn.preprocessing import LabelEncoder
l=LabelEncoder()
for i in df.columns:
  if df[i].dtype=='object':
    df[i]=l.fit_transform(df[i])

df.shape

x=df.drop('DALYs (Disability-Adjusted Life Years) - Mental disorders - Sex: Both - Age: All Ages (Percent)',axis=1)
y=df['DALYs (Disability-Adjusted Life Years) - Mental disorders - Sex: Both - Age: All Ages (Percent)']
from sklearn.model_selection import train_test_split
xtrain,xtest,ytrain,ytest=train_test_split(x,y,test_size=20,random_state=2)

print("xtrains: ", xtrain.shape)
print("xtest: ",xtest.shape)
print("\n ytrain: ",ytrain.shape)
print("ytest: ",ytest.shape)

from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error,r2_score
lr=LinearRegression()
lr.fit(xtrain,ytrain)
ytrain_pred = lr.predict(xtrain)
mse = mean_squared_error(ytrain,ytrain_pred)
rmse = (np.sqrt(mean_squared_error(ytrain,ytrain_pred)))
r2 = r2_score(ytrain,ytrain_pred)

print("The linear regression model performance for training set:\n\n")
print('mse is {}'.format(mse))
print('rmse is {}'.format(rmse))
print('r2 is {}'.format(r2))